'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.OAuthHelper = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _crypto = require('crypto');

var _crypto2 = _interopRequireDefault(_crypto);

var _oauthSignature = require('oauth-signature');

var _oauthSignature2 = _interopRequireDefault(_oauthSignature);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * A helper for OAuth 1.0 header information and signing keys.
 */
var OAuthHelper = exports.OAuthHelper = function () {
  /**
   * Intialize the helper
   * @param {string} consumerKey The consumer key
   * @param {string} token The token value
   */
  function OAuthHelper(consumerKey, token) {
    _classCallCheck(this, OAuthHelper);

    /** @type {string} */
    this.consumerKey = consumerKey;
    /** @type {string} */
    this.token = token;
    /** @type {string} */
    this.nonce = _crypto2.default.randomBytes(16).toString('hex');
    /** @type {string} */
    this.signature = '';
    /** @type {number} */
    this.timestamp = Math.round(Date.now() / 1000).toString();
  }

  _createClass(OAuthHelper, [{
    key: 'sign',


    /**
     * Sign the request with oath headers and sets the signature member of the OauthHelper instance.
     */
    value: function sign(url, request, consumerSecret, tokenSecret) {
      var params = Object.assign({}, this.parameters, request.params.toObject());

      this.signature = _oauthSignature2.default.generate(request.method, url, params, consumerSecret, tokenSecret);
    }
  }, {
    key: 'parameters',
    get: function get() {
      return {
        oauth_consumer_key: this.consumerKey,
        oauth_token: this.token,
        oauth_nonce: this.nonce,
        oauth_timestamp: this.timestamp,
        oauth_signature_method: 'HMAC-SHA1',
        oauth_version: '1.0'
      };
    }
  }, {
    key: 'header',
    get: function get() {
      var str = 'OAuth ';

      var params = Object.assign({ 'realm': '' }, this.parameters);
      params['oauth_signature'] = this.signature;

      var keys = Object.keys(params);
      var pairs = keys.map(function (k) {
        return k + '="' + params[k] + '"';
      });

      str += pairs.join(',');
      return str;
    }
  }, {
    key: 'queryString',
    get: function get() {
      var params = Object.assign({}, this.parameters);
      params['oauth_signature'] = this.signature;
      var str = JSON.stringify(params);
      return "Authorization=" + str;
    }
  }]);

  return OAuthHelper;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9vQXV0aEhlbHBlci5qcyJdLCJuYW1lcyI6WyJPQXV0aEhlbHBlciIsImNvbnN1bWVyS2V5IiwidG9rZW4iLCJub25jZSIsInJhbmRvbUJ5dGVzIiwidG9TdHJpbmciLCJzaWduYXR1cmUiLCJ0aW1lc3RhbXAiLCJNYXRoIiwicm91bmQiLCJEYXRlIiwibm93IiwidXJsIiwicmVxdWVzdCIsImNvbnN1bWVyU2VjcmV0IiwidG9rZW5TZWNyZXQiLCJwYXJhbXMiLCJPYmplY3QiLCJhc3NpZ24iLCJwYXJhbWV0ZXJzIiwidG9PYmplY3QiLCJnZW5lcmF0ZSIsIm1ldGhvZCIsIm9hdXRoX2NvbnN1bWVyX2tleSIsIm9hdXRoX3Rva2VuIiwib2F1dGhfbm9uY2UiLCJvYXV0aF90aW1lc3RhbXAiLCJvYXV0aF9zaWduYXR1cmVfbWV0aG9kIiwib2F1dGhfdmVyc2lvbiIsInN0ciIsImtleXMiLCJwYWlycyIsIm1hcCIsImsiLCJqb2luIiwiSlNPTiIsInN0cmluZ2lmeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7QUFDQTs7Ozs7Ozs7QUFFQTs7O0lBR2FBLFcsV0FBQUEsVztBQUNYOzs7OztBQUtBLHVCQUFZQyxXQUFaLEVBQXlCQyxLQUF6QixFQUFnQztBQUFBOztBQUM5QjtBQUNBLFNBQUtELFdBQUwsR0FBbUJBLFdBQW5CO0FBQ0E7QUFDQSxTQUFLQyxLQUFMLEdBQWFBLEtBQWI7QUFDQTtBQUNBLFNBQUtDLEtBQUwsR0FBYSxpQkFBT0MsV0FBUCxDQUFtQixFQUFuQixFQUF1QkMsUUFBdkIsQ0FBZ0MsS0FBaEMsQ0FBYjtBQUNBO0FBQ0EsU0FBS0MsU0FBTCxHQUFpQixFQUFqQjtBQUNBO0FBQ0EsU0FBS0MsU0FBTCxHQUFpQkMsS0FBS0MsS0FBTCxDQUFXQyxLQUFLQyxHQUFMLEtBQVcsSUFBdEIsRUFBNEJOLFFBQTVCLEVBQWpCO0FBQ0Q7Ozs7OztBQW1DRDs7O3lCQUdLTyxHLEVBQUtDLE8sRUFBU0MsYyxFQUFnQkMsVyxFQUFZO0FBQzdDLFVBQUlDLFNBQVNDLE9BQU9DLE1BQVAsQ0FBYyxFQUFkLEVBQWtCLEtBQUtDLFVBQXZCLEVBQW1DTixRQUFRRyxNQUFSLENBQWVJLFFBQWYsRUFBbkMsQ0FBYjs7QUFFQSxXQUFLZCxTQUFMLEdBQWlCLHlCQUFlZSxRQUFmLENBQXdCUixRQUFRUyxNQUFoQyxFQUF3Q1YsR0FBeEMsRUFBNkNJLE1BQTdDLEVBQXFERixjQUFyRCxFQUFxRUMsV0FBckUsQ0FBakI7QUFDRDs7O3dCQXhDZTtBQUNkLGFBQU87QUFDTFEsNEJBQXFCLEtBQUt0QixXQURyQjtBQUVMdUIscUJBQWMsS0FBS3RCLEtBRmQ7QUFHTHVCLHFCQUFjLEtBQUt0QixLQUhkO0FBSUx1Qix5QkFBa0IsS0FBS25CLFNBSmxCO0FBS0xvQixnQ0FBeUIsV0FMcEI7QUFNTEMsdUJBQWdCO0FBTlgsT0FBUDtBQVFEOzs7d0JBRVc7QUFDVixVQUFJQyxNQUFNLFFBQVY7O0FBRUEsVUFBSWIsU0FBU0MsT0FBT0MsTUFBUCxDQUFjLEVBQUMsU0FBUyxFQUFWLEVBQWQsRUFBNkIsS0FBS0MsVUFBbEMsQ0FBYjtBQUNBSCxhQUFPLGlCQUFQLElBQTRCLEtBQUtWLFNBQWpDOztBQUVBLFVBQUl3QixPQUFPYixPQUFPYSxJQUFQLENBQVlkLE1BQVosQ0FBWDtBQUNBLFVBQUllLFFBQVFELEtBQUtFLEdBQUwsQ0FBVSxVQUFDQyxDQUFELEVBQU87QUFDM0IsZUFBT0EsSUFBSSxJQUFKLEdBQVdqQixPQUFPaUIsQ0FBUCxDQUFYLEdBQXVCLEdBQTlCO0FBQ0QsT0FGVyxDQUFaOztBQUlBSixhQUFPRSxNQUFNRyxJQUFOLENBQVcsR0FBWCxDQUFQO0FBQ0EsYUFBT0wsR0FBUDtBQUNEOzs7d0JBRWdCO0FBQ2YsVUFBSWIsU0FBU0MsT0FBT0MsTUFBUCxDQUFjLEVBQWQsRUFBa0IsS0FBS0MsVUFBdkIsQ0FBYjtBQUNBSCxhQUFPLGlCQUFQLElBQTRCLEtBQUtWLFNBQWpDO0FBQ0EsVUFBSXVCLE1BQU1NLEtBQUtDLFNBQUwsQ0FBZXBCLE1BQWYsQ0FBVjtBQUNBLGFBQU8sbUJBQW1CYSxHQUExQjtBQUNEIiwiZmlsZSI6Im9BdXRoSGVscGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNyeXB0byBmcm9tICdjcnlwdG8nO1xuaW1wb3J0IG9hdXRoU2lnbmF0dXJlIGZyb20gJ29hdXRoLXNpZ25hdHVyZSc7XG5cbi8qKlxuICogQSBoZWxwZXIgZm9yIE9BdXRoIDEuMCBoZWFkZXIgaW5mb3JtYXRpb24gYW5kIHNpZ25pbmcga2V5cy5cbiAqL1xuZXhwb3J0IGNsYXNzIE9BdXRoSGVscGVyIHtcbiAgLyoqXG4gICAqIEludGlhbGl6ZSB0aGUgaGVscGVyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb25zdW1lcktleSBUaGUgY29uc3VtZXIga2V5XG4gICAqIEBwYXJhbSB7c3RyaW5nfSB0b2tlbiBUaGUgdG9rZW4gdmFsdWVcbiAgICovXG4gIGNvbnN0cnVjdG9yKGNvbnN1bWVyS2V5LCB0b2tlbikge1xuICAgIC8qKiBAdHlwZSB7c3RyaW5nfSAqL1xuICAgIHRoaXMuY29uc3VtZXJLZXkgPSBjb25zdW1lcktleTtcbiAgICAvKiogQHR5cGUge3N0cmluZ30gKi9cbiAgICB0aGlzLnRva2VuID0gdG9rZW47XG4gICAgLyoqIEB0eXBlIHtzdHJpbmd9ICovXG4gICAgdGhpcy5ub25jZSA9IGNyeXB0by5yYW5kb21CeXRlcygxNikudG9TdHJpbmcoJ2hleCcpO1xuICAgIC8qKiBAdHlwZSB7c3RyaW5nfSAqL1xuICAgIHRoaXMuc2lnbmF0dXJlID0gJyc7XG4gICAgLyoqIEB0eXBlIHtudW1iZXJ9ICovXG4gICAgdGhpcy50aW1lc3RhbXAgPSBNYXRoLnJvdW5kKERhdGUubm93KCkvMTAwMCkudG9TdHJpbmcoKTtcbiAgfVxuXG4gIGdldCBwYXJhbWV0ZXJzKCl7XG4gICAgcmV0dXJuIHtcbiAgICAgIG9hdXRoX2NvbnN1bWVyX2tleSA6IHRoaXMuY29uc3VtZXJLZXksXG4gICAgICBvYXV0aF90b2tlbiA6IHRoaXMudG9rZW4sXG4gICAgICBvYXV0aF9ub25jZSA6IHRoaXMubm9uY2UsXG4gICAgICBvYXV0aF90aW1lc3RhbXAgOiB0aGlzLnRpbWVzdGFtcCxcbiAgICAgIG9hdXRoX3NpZ25hdHVyZV9tZXRob2QgOiAnSE1BQy1TSEExJyxcbiAgICAgIG9hdXRoX3ZlcnNpb24gOiAnMS4wJ1xuICAgIH07XG4gIH1cblxuICBnZXQgaGVhZGVyKCl7XG4gICAgbGV0IHN0ciA9ICdPQXV0aCAnO1xuXG4gICAgbGV0IHBhcmFtcyA9IE9iamVjdC5hc3NpZ24oeydyZWFsbSc6ICcnfSwgdGhpcy5wYXJhbWV0ZXJzKTtcbiAgICBwYXJhbXNbJ29hdXRoX3NpZ25hdHVyZSddID0gdGhpcy5zaWduYXR1cmU7XG5cbiAgICBsZXQga2V5cyA9IE9iamVjdC5rZXlzKHBhcmFtcyk7XG4gICAgbGV0IHBhaXJzID0ga2V5cy5tYXAoIChrKSA9PiB7XG4gICAgICByZXR1cm4gayArICc9XCInICsgcGFyYW1zW2tdICsgJ1wiJztcbiAgICB9KTtcblxuICAgIHN0ciArPSBwYWlycy5qb2luKCcsJyk7XG4gICAgcmV0dXJuIHN0cjtcbiAgfVxuXG4gIGdldCBxdWVyeVN0cmluZygpe1xuICAgIGxldCBwYXJhbXMgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLnBhcmFtZXRlcnMpO1xuICAgIHBhcmFtc1snb2F1dGhfc2lnbmF0dXJlJ10gPSB0aGlzLnNpZ25hdHVyZTtcbiAgICBsZXQgc3RyID0gSlNPTi5zdHJpbmdpZnkocGFyYW1zKTtcbiAgICByZXR1cm4gXCJBdXRob3JpemF0aW9uPVwiICsgc3RyO1xuICB9XG5cbiAgLyoqXG4gICAqIFNpZ24gdGhlIHJlcXVlc3Qgd2l0aCBvYXRoIGhlYWRlcnMgYW5kIHNldHMgdGhlIHNpZ25hdHVyZSBtZW1iZXIgb2YgdGhlIE9hdXRoSGVscGVyIGluc3RhbmNlLlxuICAgKi9cbiAgc2lnbih1cmwsIHJlcXVlc3QsIGNvbnN1bWVyU2VjcmV0LCB0b2tlblNlY3JldCl7XG4gICAgbGV0IHBhcmFtcyA9IE9iamVjdC5hc3NpZ24oe30sIHRoaXMucGFyYW1ldGVycywgcmVxdWVzdC5wYXJhbXMudG9PYmplY3QoKSk7XG5cbiAgICB0aGlzLnNpZ25hdHVyZSA9IG9hdXRoU2lnbmF0dXJlLmdlbmVyYXRlKHJlcXVlc3QubWV0aG9kLCB1cmwsIHBhcmFtcywgY29uc3VtZXJTZWNyZXQsIHRva2VuU2VjcmV0KTtcbiAgfVxufVxuIl19
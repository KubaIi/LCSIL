'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Category = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _request = require('../request');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Represents a Category
 */
var Category = exports.Category = function () {
  /**
   * Create a new instance of a category
   * @param {object} [data] API response data.
   * @param {number} [data.category_id=0] The category id. i.e. - 10
   * @param {string} [data.category_name] The category name. i.e. - Container
   * @param {number} [data.parent_id] The parent category id or 0 if root category. i.e. - 0
   */
  function Category(data) {
    _classCallCheck(this, Category);

    data = data || {};
    /** @type {number} */
    this.category_id = data.category_id || 0;
    /** @type {string} */
    this.category_name = data.category_name || '';
    /** @type {number} */
    this.parent_id = data.parent_id || '';
  }

  /**
   * Method to get a specific category
   *
   * Usage:
   *
   * ```
   * var req = Category.get(123);
   * client.send(req).then(category => console.log(category));
   * ```
   *
   * @param {number} categoryId Catalog item type
   * @return {Request} A request that resolves to a {@link Category} instance.
   */


  _createClass(Category, null, [{
    key: 'get',
    value: function get(categoryId) {
      var method = _request.Request.GET;
      var uri = '/categories/' + categoryId;

      return new _request.Request(method, uri, null, function (data) {
        return new Category(data);
      });
    }

    /**
     * Get a list of all colors
     * Usage:
     *
     * ```
     * var req = Category.all();
     * client.send(req).then(categories => console.log(categories));
     * ```
     *
     * @return {Request} A request that resolves to an array of {@link Category}.
     */

  }, {
    key: 'all',
    value: function all() {
      var method = _request.Request.GET;
      var uri = '/categories';

      return new _request.Request(method, uri, null, function (data) {
        return data.map(function (d) {
          return new Category(d);
        });
      });
    }
  }]);

  return Category;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jYXRlZ29yeS9jYXRlZ29yeS5qcyJdLCJuYW1lcyI6WyJDYXRlZ29yeSIsImRhdGEiLCJjYXRlZ29yeV9pZCIsImNhdGVnb3J5X25hbWUiLCJwYXJlbnRfaWQiLCJjYXRlZ29yeUlkIiwibWV0aG9kIiwiR0VUIiwidXJpIiwibWFwIiwiZCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7Ozs7QUFFQTs7O0lBR2FBLFEsV0FBQUEsUTtBQUNYOzs7Ozs7O0FBT0Esb0JBQVlDLElBQVosRUFBa0I7QUFBQTs7QUFDaEJBLFdBQU9BLFFBQVEsRUFBZjtBQUNBO0FBQ0EsU0FBS0MsV0FBTCxHQUFtQkQsS0FBS0MsV0FBTCxJQUFvQixDQUF2QztBQUNBO0FBQ0EsU0FBS0MsYUFBTCxHQUFxQkYsS0FBS0UsYUFBTCxJQUFzQixFQUEzQztBQUNBO0FBQ0EsU0FBS0MsU0FBTCxHQUFpQkgsS0FBS0csU0FBTCxJQUFrQixFQUFuQztBQUNEOztBQUVEOzs7Ozs7Ozs7Ozs7Ozs7Ozt3QkFhV0MsVSxFQUFZO0FBQ3JCLFVBQUlDLFNBQVMsaUJBQVFDLEdBQXJCO0FBQ0EsVUFBSUMsdUJBQXFCSCxVQUF6Qjs7QUFFQSxhQUFPLHFCQUFZQyxNQUFaLEVBQW9CRSxHQUFwQixFQUF5QixJQUF6QixFQUErQjtBQUFBLGVBQVEsSUFBSVIsUUFBSixDQUFhQyxJQUFiLENBQVI7QUFBQSxPQUEvQixDQUFQO0FBQ0Q7O0FBRUQ7Ozs7Ozs7Ozs7Ozs7OzBCQVdhO0FBQ1gsVUFBSUssU0FBUyxpQkFBUUMsR0FBckI7QUFDQSxVQUFJQyxtQkFBSjs7QUFFQSxhQUFPLHFCQUFZRixNQUFaLEVBQW9CRSxHQUFwQixFQUF5QixJQUF6QixFQUErQjtBQUFBLGVBQVFQLEtBQUtRLEdBQUwsQ0FBUztBQUFBLGlCQUFLLElBQUlULFFBQUosQ0FBYVUsQ0FBYixDQUFMO0FBQUEsU0FBVCxDQUFSO0FBQUEsT0FBL0IsQ0FBUDtBQUNEIiwiZmlsZSI6ImNhdGVnb3J5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtSZXF1ZXN0fSBmcm9tICcuLi9yZXF1ZXN0JztcblxuLyoqXG4gKiBSZXByZXNlbnRzIGEgQ2F0ZWdvcnlcbiAqL1xuZXhwb3J0IGNsYXNzIENhdGVnb3J5IHtcbiAgLyoqXG4gICAqIENyZWF0ZSBhIG5ldyBpbnN0YW5jZSBvZiBhIGNhdGVnb3J5XG4gICAqIEBwYXJhbSB7b2JqZWN0fSBbZGF0YV0gQVBJIHJlc3BvbnNlIGRhdGEuXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBbZGF0YS5jYXRlZ29yeV9pZD0wXSBUaGUgY2F0ZWdvcnkgaWQuIGkuZS4gLSAxMFxuICAgKiBAcGFyYW0ge3N0cmluZ30gW2RhdGEuY2F0ZWdvcnlfbmFtZV0gVGhlIGNhdGVnb3J5IG5hbWUuIGkuZS4gLSBDb250YWluZXJcbiAgICogQHBhcmFtIHtudW1iZXJ9IFtkYXRhLnBhcmVudF9pZF0gVGhlIHBhcmVudCBjYXRlZ29yeSBpZCBvciAwIGlmIHJvb3QgY2F0ZWdvcnkuIGkuZS4gLSAwXG4gICAqL1xuICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgZGF0YSA9IGRhdGEgfHwge307XG4gICAgLyoqIEB0eXBlIHtudW1iZXJ9ICovXG4gICAgdGhpcy5jYXRlZ29yeV9pZCA9IGRhdGEuY2F0ZWdvcnlfaWQgfHwgMDtcbiAgICAvKiogQHR5cGUge3N0cmluZ30gKi9cbiAgICB0aGlzLmNhdGVnb3J5X25hbWUgPSBkYXRhLmNhdGVnb3J5X25hbWUgfHwgJyc7XG4gICAgLyoqIEB0eXBlIHtudW1iZXJ9ICovXG4gICAgdGhpcy5wYXJlbnRfaWQgPSBkYXRhLnBhcmVudF9pZCB8fCAnJztcbiAgfVxuXG4gIC8qKlxuICAgKiBNZXRob2QgdG8gZ2V0IGEgc3BlY2lmaWMgY2F0ZWdvcnlcbiAgICpcbiAgICogVXNhZ2U6XG4gICAqXG4gICAqIGBgYFxuICAgKiB2YXIgcmVxID0gQ2F0ZWdvcnkuZ2V0KDEyMyk7XG4gICAqIGNsaWVudC5zZW5kKHJlcSkudGhlbihjYXRlZ29yeSA9PiBjb25zb2xlLmxvZyhjYXRlZ29yeSkpO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIHtudW1iZXJ9IGNhdGVnb3J5SWQgQ2F0YWxvZyBpdGVtIHR5cGVcbiAgICogQHJldHVybiB7UmVxdWVzdH0gQSByZXF1ZXN0IHRoYXQgcmVzb2x2ZXMgdG8gYSB7QGxpbmsgQ2F0ZWdvcnl9IGluc3RhbmNlLlxuICAgKi9cbiAgc3RhdGljIGdldChjYXRlZ29yeUlkKSB7XG4gICAgbGV0IG1ldGhvZCA9IFJlcXVlc3QuR0VUO1xuICAgIGxldCB1cmkgPSBgL2NhdGVnb3JpZXMvJHtjYXRlZ29yeUlkfWA7XG5cbiAgICByZXR1cm4gbmV3IFJlcXVlc3QobWV0aG9kLCB1cmksIG51bGwsIGRhdGEgPT4gbmV3IENhdGVnb3J5KGRhdGEpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgYSBsaXN0IG9mIGFsbCBjb2xvcnNcbiAgICogVXNhZ2U6XG4gICAqXG4gICAqIGBgYFxuICAgKiB2YXIgcmVxID0gQ2F0ZWdvcnkuYWxsKCk7XG4gICAqIGNsaWVudC5zZW5kKHJlcSkudGhlbihjYXRlZ29yaWVzID0+IGNvbnNvbGUubG9nKGNhdGVnb3JpZXMpKTtcbiAgICogYGBgXG4gICAqXG4gICAqIEByZXR1cm4ge1JlcXVlc3R9IEEgcmVxdWVzdCB0aGF0IHJlc29sdmVzIHRvIGFuIGFycmF5IG9mIHtAbGluayBDYXRlZ29yeX0uXG4gICAqL1xuICBzdGF0aWMgYWxsKCkge1xuICAgIGxldCBtZXRob2QgPSBSZXF1ZXN0LkdFVDtcbiAgICBsZXQgdXJpID0gYC9jYXRlZ29yaWVzYDtcblxuICAgIHJldHVybiBuZXcgUmVxdWVzdChtZXRob2QsIHVyaSwgbnVsbCwgZGF0YSA9PiBkYXRhLm1hcChkID0+IG5ldyBDYXRlZ29yeShkKSkpO1xuICB9XG59XG4iXX0=
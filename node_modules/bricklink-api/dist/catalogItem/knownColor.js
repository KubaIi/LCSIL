'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.KnownColor = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _request = require('../request');

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Represents a known color object.
 */
var KnownColor = exports.KnownColor = function () {
  /**
   * Create a new instance of a known color
   * @param {object} [data] API response data.
   * @param {number} [data.color_id=0] The color id.
   * @param {number} [data.quantity=0] The quantity of items with this known color.
   */
  function KnownColor(data) {
    _classCallCheck(this, KnownColor);

    data = data || {};
    /** @type {number} */
    this.color_id = data.color_id || 0;
    /** @type {number} */
    this.quantity = data.quantity || 0;
  }

  /**
   * Method to get a list of known color_id for a given catalog item.
   *
   * Usage:
   *
   * ```
   * var req = KnownColor.get(ItemType.Part, '3001');
   * client.send(req).then(colors => console.log(colors));
   * ```
   *
   * @param {string} itemType Catalog item type
   * @param {string} itemNumber Catalog item number
   * @return {Request} A request that resolves to a list of {@link KnownColor}.
   */


  _createClass(KnownColor, null, [{
    key: 'get',
    value: function get(itemType, itemNumber) {
      var method = _request.Request.GET;
      var uri = '/items/' + itemType + '/' + itemNumber + '/colors';

      return new _request.Request(method, uri, null, function (data) {
        return data.map(function (color) {
          return new KnownColor(color);
        });
      });
    }
  }]);

  return KnownColor;
}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jYXRhbG9nSXRlbS9rbm93bkNvbG9yLmpzIl0sIm5hbWVzIjpbIktub3duQ29sb3IiLCJkYXRhIiwiY29sb3JfaWQiLCJxdWFudGl0eSIsIml0ZW1UeXBlIiwiaXRlbU51bWJlciIsIm1ldGhvZCIsIkdFVCIsInVyaSIsIm1hcCIsImNvbG9yIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7OztBQUVBOzs7SUFHYUEsVSxXQUFBQSxVO0FBQ1g7Ozs7OztBQU1BLHNCQUFZQyxJQUFaLEVBQWtCO0FBQUE7O0FBQ2hCQSxXQUFPQSxRQUFRLEVBQWY7QUFDQTtBQUNBLFNBQUtDLFFBQUwsR0FBZ0JELEtBQUtDLFFBQUwsSUFBaUIsQ0FBakM7QUFDQTtBQUNBLFNBQUtDLFFBQUwsR0FBZ0JGLEtBQUtFLFFBQUwsSUFBaUIsQ0FBakM7QUFDRDs7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7O3dCQWNXQyxRLEVBQVVDLFUsRUFBWTtBQUMvQixVQUFJQyxTQUFTLGlCQUFRQyxHQUFyQjtBQUNBLFVBQUlDLGtCQUFnQkosUUFBaEIsU0FBNEJDLFVBQTVCLFlBQUo7O0FBRUEsYUFBTyxxQkFBWUMsTUFBWixFQUFvQkUsR0FBcEIsRUFBeUIsSUFBekIsRUFBK0IsVUFBQ1AsSUFBRCxFQUFVO0FBQzlDLGVBQU9BLEtBQUtRLEdBQUwsQ0FBUztBQUFBLGlCQUFTLElBQUlULFVBQUosQ0FBZVUsS0FBZixDQUFUO0FBQUEsU0FBVCxDQUFQO0FBQ0QsT0FGTSxDQUFQO0FBR0QiLCJmaWxlIjoia25vd25Db2xvci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7UmVxdWVzdH0gZnJvbSAnLi4vcmVxdWVzdCc7XG5cbi8qKlxuICogUmVwcmVzZW50cyBhIGtub3duIGNvbG9yIG9iamVjdC5cbiAqL1xuZXhwb3J0IGNsYXNzIEtub3duQ29sb3Ige1xuICAvKipcbiAgICogQ3JlYXRlIGEgbmV3IGluc3RhbmNlIG9mIGEga25vd24gY29sb3JcbiAgICogQHBhcmFtIHtvYmplY3R9IFtkYXRhXSBBUEkgcmVzcG9uc2UgZGF0YS5cbiAgICogQHBhcmFtIHtudW1iZXJ9IFtkYXRhLmNvbG9yX2lkPTBdIFRoZSBjb2xvciBpZC5cbiAgICogQHBhcmFtIHtudW1iZXJ9IFtkYXRhLnF1YW50aXR5PTBdIFRoZSBxdWFudGl0eSBvZiBpdGVtcyB3aXRoIHRoaXMga25vd24gY29sb3IuXG4gICAqL1xuICBjb25zdHJ1Y3RvcihkYXRhKSB7XG4gICAgZGF0YSA9IGRhdGEgfHwge307XG4gICAgLyoqIEB0eXBlIHtudW1iZXJ9ICovXG4gICAgdGhpcy5jb2xvcl9pZCA9IGRhdGEuY29sb3JfaWQgfHwgMDtcbiAgICAvKiogQHR5cGUge251bWJlcn0gKi9cbiAgICB0aGlzLnF1YW50aXR5ID0gZGF0YS5xdWFudGl0eSB8fCAwO1xuICB9XG4gIFxuICAvKipcbiAgICogTWV0aG9kIHRvIGdldCBhIGxpc3Qgb2Yga25vd24gY29sb3JfaWQgZm9yIGEgZ2l2ZW4gY2F0YWxvZyBpdGVtLlxuICAgKlxuICAgKiBVc2FnZTpcbiAgICpcbiAgICogYGBgXG4gICAqIHZhciByZXEgPSBLbm93bkNvbG9yLmdldChJdGVtVHlwZS5QYXJ0LCAnMzAwMScpO1xuICAgKiBjbGllbnQuc2VuZChyZXEpLnRoZW4oY29sb3JzID0+IGNvbnNvbGUubG9nKGNvbG9ycykpO1xuICAgKiBgYGBcbiAgICpcbiAgICogQHBhcmFtIHtzdHJpbmd9IGl0ZW1UeXBlIENhdGFsb2cgaXRlbSB0eXBlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBpdGVtTnVtYmVyIENhdGFsb2cgaXRlbSBudW1iZXJcbiAgICogQHJldHVybiB7UmVxdWVzdH0gQSByZXF1ZXN0IHRoYXQgcmVzb2x2ZXMgdG8gYSBsaXN0IG9mIHtAbGluayBLbm93bkNvbG9yfS5cbiAgICovXG4gIHN0YXRpYyBnZXQoaXRlbVR5cGUsIGl0ZW1OdW1iZXIpIHtcbiAgICBsZXQgbWV0aG9kID0gUmVxdWVzdC5HRVQ7XG4gICAgbGV0IHVyaSA9IGAvaXRlbXMvJHtpdGVtVHlwZX0vJHtpdGVtTnVtYmVyfS9jb2xvcnNgO1xuXG4gICAgcmV0dXJuIG5ldyBSZXF1ZXN0KG1ldGhvZCwgdXJpLCBudWxsLCAoZGF0YSkgPT4ge1xuICAgICAgcmV0dXJuIGRhdGEubWFwKGNvbG9yID0+IG5ldyBLbm93bkNvbG9yKGNvbG9yKSk7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==